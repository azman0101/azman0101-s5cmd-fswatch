ARG ALPINE_VERSION=3.18
FROM python:3.11-alpine${ALPINE_VERSION} as builder

ARG AWS_CLI_VERSION=2.13.5
RUN apk add --no-cache git unzip groff build-base libffi-dev cmake
RUN git clone --single-branch --depth 1 -b ${AWS_CLI_VERSION} https://github.com/aws/aws-cli.git

WORKDIR aws-cli
RUN ./configure --with-install-type=portable-exe --with-download-deps
RUN make
RUN make install

# reduce image size: remove autocomplete and examples
RUN rm -rf \
    /usr/local/lib/aws-cli/aws_completer \
    /usr/local/lib/aws-cli/awscli/data/ac.index \
    /usr/local/lib/aws-cli/awscli/examples
RUN find /usr/local/lib/aws-cli/awscli/data -name completions-1*.json -delete
RUN find /usr/local/lib/aws-cli/awscli/botocore/data -name examples-1.json -delete
RUN (cd /usr/local/lib/aws-cli; for a in *.so*; do test -f /lib/$a && rm $a; done)

FROM golang:alpine
COPY --from=builder /usr/local/lib/aws-cli/ /usr/local/lib/aws-cli/
RUN ln -s /usr/local/lib/aws-cli/aws /usr/local/bin/aws


RUN apk add git curl tar gzip coreutils file autoconf automake libtool gettext gettext-dev make g++ texinfo py3-pip bash
# RUN pip3 install awscli
RUN set
RUN git clone https://github.com/emcrisostomo/fswatch.git
RUN cd fswatch && git checkout 1.17.1 && ./autogen.sh --force && ./configure && make -j && make install && cd ..
RUN curl -LO https://github.com/peak/s5cmd/releases/download/v2.1.0/s5cmd_2.1.0_Linux-64bit.tar.gz
RUN tar xvf s5cmd_2.1.0_Linux-64bit.tar.gz
RUN mv s5cmd /usr/local/bin/
RUN s5cmd version
COPY watch.sh ./
RUN chmod +x watch.sh
